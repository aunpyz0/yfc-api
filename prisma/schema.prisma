// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Staff {
  id        Int     @id @default(autoincrement())
  code      String
  firstname String
  lastname  String
  email     String  @unique
  password  String
  role      Role    @relation(fields: [roleId], references: [id])
  roleId    Int
  Give      Give[]
  token     String?
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String
  Staff Staff[]
}

model Supporter {
  id        Int    @id @default(autoincrement())
  code      String
  firstname String
  lastname  String
  Give      Give[]
}

model Department {
  id   Int    @id @default(autoincrement())
  name String
  Give Give[]
}

model Bank {
  id                Int    @id @default(autoincrement())
  name              String
  transferFromBank  Give[] @relation(name: "TransferFromBank")
  transferToBank    Give[] @relation(name: "TransferToBank")
  chequeBank        Give[] @relation(name: "ChequeBank")
  yfcBanks          YFCBank[]
}

model YFCBank {
  id              Int @id @default(autoincrement())
  name            String
  accountNumber   String
  bank            Bank @relation(fields: [bankId], references: [id])            
  bankId          Int
  bankBranch      String
}

model GiveType {
  id   Int    @id @default(autoincrement())
  name String
  Give Give[]
}

model PaymentType {
  id   Int    @id @default(autoincrement())
  name String
  Give Give[]
}

model Give {
  id                 Int         @id @default(autoincrement())
  supporter          Supporter   @relation(fields: [supporterId], references: [id])
  supporterId        Int
  owner              Staff       @relation(fields: [ownerId], references: [id])
  ownerId            Int
  amount             Float
  paymentType        PaymentType @relation(fields: [paymentTypeId], references: [id])
  paymentTypeId      Int
  receiveDate        DateTime?
  transferDate       DateTime?
  transferFromBank   Bank?       @relation(name: "TransferFromBank", fields: [transferFromBankId], references: [id])
  transferFromBankId Int?
  transferToBank     Bank?       @relation(name: "TransferToBank", fields: [transferToBankId], references: [id])
  transferToBankId   Int?
  chequeBank         Bank?       @relation(name: "ChequeBank", fields: [chequeBankId], references: [id])
  chequeBankId       Int?
  chequeBankBranch   String?
  chequeNumber       String?
  chequeDate         DateTime?
  giveType           GiveType    @relation(fields: [giveTypeId], references: [id])
  giveTypeId         Int
  giveFrom           DateTime?
  giveTo             DateTime?
  department         Department  @relation(fields: [departmentId], references: [id])
  departmentId       Int
  evidence           String?
}
