// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Staff {
  id              Int       @id @default(autoincrement())
  code            String
  firstname       String
  lastname        String
  email           String    @unique
  password        String
  role            Role      @relation(fields: [roleId], references: [id])
  roleId          Int
  Give            Give[]
  refreshToken    String?
}

model Role {
  id      Int         @id @default(autoincrement())
  name    String
}

model Supporter {
  id          Int       @id @default(autoincrement())
  code        String
  firstname   String
  lastname    String
}

model Bank {
  id                Int    @id @default(autoincrement())
  name              String
  transferFromBank  Give[] @relation(name: "TransferFromBank")
  chequeBank        Give[] @relation(name: "ChequeBank")
  yfcBanks          YFCBank[]
}

model YFCBank {
  id                Int @id @default(autoincrement())
  name              String
  accountNo         String
  bankId            Int
  bank              Bank @relation(fields: [bankId], references: [id])            
}

model Give {
  id                    Int           @id @default(autoincrement())
  supporter             Supporter     @relation(fields: [supporterId], references: [id])
  supporterId           Int
  receiver              Staff         @relation(fields: [ownerId], references: [id])
  receiverId            Int
  receiveDate           DateTime
  amount                Float
  evidence              String?
}

model TransferDetail {
  id                    Int           @id @default(autoincrement())
  giveId                Int
  give                  Give          @relation(fields: [giveId], references: [id])
  transferDate          DateTime
  transferFromBankId    Int
  transferFromBank      Bank          @relation(fields: [transferFromBankId], references: [id])
  transferToBankId      Int
  transferToBank        YFCBank       @relation(fields: [transferToBankId], references: [id])
}

model ChequeDetail {
  id                    Int           @id @default(autoincrement())
  giveId                Int
  give                  Give          @relation(fields: [giveId], references: [id])
  chequeBankId          Int
  chequeBank            Bank          @relation(fields: [chequeBankId], references: [id])
  chequeBankBranch      String
  chequeNo              String
  chequeDate            DateTime
}

model Purpose {
  id      Int       @id @default(autoincrement())
  name    String
}

model Receipt {
  id              Int         @id @default(autoincrement())
  giveId          Int         
  give            Give        @relation(fields: [giveId], references: [id])
  supporterId     Int
  supporter       Supporter   @relation(fields: [supporterId], references: [id])
  amount          Float
  purposeId       Int
  purposeId       Purpose     @relation(fields: [purposeId], references: [id])
  expressNo       String?
}

model Report {
  id              Int         @id @default(autoincrement())
}

model Department {
  id    Int     @id @default(autoincrement())
  name  String
}